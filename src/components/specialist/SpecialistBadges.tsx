'use client';

import React from 'react';

interface SpecialistBadgesProps {
  languages: string[];
  ageGroups: string[];
  className?: string;
}

export default function SpecialistBadges({ languages, ageGroups, className = '' }: SpecialistBadgesProps) {
  const getLanguageFlag = (language: string) => {
    switch (language.toLowerCase()) {
      case '—Ä—É—Å—Å–∫–∏–π':
        return 'üá∑üá∫';
      case '–∞–Ω–≥–ª–∏–π—Å–∫–∏–π':
        return 'üá∫üá∏';
      case '–Ω–µ–º–µ—Ü–∫–∏–π':
        return 'üá©üá™';
      case '—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π':
        return 'üá´üá∑';
      case '–∏—Å–ø–∞–Ω—Å–∫–∏–π':
        return 'üá™üá∏';
      case '–∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π':
        return 'üáÆüáπ';
      case '–∫–∏—Ç–∞–π—Å–∫–∏–π':
        return 'üá®üá≥';
      case '—è–ø–æ–Ω—Å–∫–∏–π':
        return 'üáØüáµ';
      default:
        return 'üåê';
    }
  };

  const getAgeGroupIcon = (group: string) => {
    switch (group) {
      case 'children':
        return 'üë∂';
      case 'teens':
        return 'üßí';
      case 'adults':
        return 'üë®';
      case 'seniors':
        return 'üë¥';
      default:
        return 'üë§';
    }
  };

  const getAgeGroupLabel = (group: string) => {
    switch (group) {
      case 'children':
        return '–î–µ—Ç–∏ (–¥–æ 12 –ª–µ—Ç)';
      case 'teens':
        return '–ü–æ–¥—Ä–æ—Å—Ç–∫–∏ (13-17 –ª–µ—Ç)';
      case 'adults':
        return '–í–∑—Ä–æ—Å–ª—ã–µ (18-65 –ª–µ—Ç)';
      case 'seniors':
        return '–ü–æ–∂–∏–ª—ã–µ (65+ –ª–µ—Ç)';
      default:
        return group;
    }
  };

  if (languages.length === 0 && ageGroups.length === 0) {
    return null;
  }

  return (
    <div className={`space-y-4 ${className}`}>
      {/* Languages */}
      {languages.length > 0 && (
        <div>
          <h4 className="text-sm font-medium text-gray-700 mb-2">–Ø–∑—ã–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π</h4>
          <div className="flex flex-wrap gap-2">
            {languages.map((language, index) => (
              <span
                key={index}
                className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
              >
                <span className="mr-1">{getLanguageFlag(language)}</span>
                {language}
              </span>
            ))}
          </div>
        </div>
      )}

      {/* Age Groups */}
      {ageGroups.length > 0 && (
        <div>
          <h4 className="text-sm font-medium text-gray-700 mb-2">–í–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –≥—Ä—É–ø–ø—ã</h4>
          <div className="flex flex-wrap gap-2">
            {ageGroups.map((group, index) => (
              <span
                key={index}
                className="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800"
              >
                <span className="mr-1">{getAgeGroupIcon(group)}</span>
                {getAgeGroupLabel(group)}
              </span>
            ))}
          </div>
        </div>
      )}
    </div>
  );
}

