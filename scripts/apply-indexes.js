#!/usr/bin/env node

const { PrismaClient } = require('@prisma/client');
const fs = require('fs');
const path = require('path');

const prisma = new PrismaClient();

async function applyIndexes() {
  try {
    console.log('üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏...');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏
    const sqlFile = path.join(__dirname, '..', 'add_performance_indexes.sql');
    const sql = fs.readFileSync(sqlFile, 'utf8');
    
    // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    const commands = sql
      .split('\n')
      .filter(line => line.trim() && !line.startsWith('--'))
      .join('\n')
      .split(';')
      .filter(cmd => cmd.trim());
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${commands.length} –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è`);
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É
    for (let i = 0; i < commands.length; i++) {
      const command = commands[i].trim();
      if (command) {
        try {
          console.log(`‚è≥ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã ${i + 1}/${commands.length}...`);
          await prisma.$executeRawUnsafe(command);
          console.log(`‚úÖ –ö–æ–º–∞–Ω–¥–∞ ${i + 1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
        } catch (error) {
          if (error.message.includes('already exists')) {
            console.log(`‚ö†Ô∏è  –ò–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∫–æ–º–∞–Ω–¥–∞ ${i + 1})`);
          } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ ${i + 1}:`, error.message);
          }
        }
      }
    }
    
    console.log('üéâ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–æ–≤:', error);
    process.exit(1);
  } finally {
    await prisma.$disconnect();
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  applyIndexes();
}

module.exports = { applyIndexes };

